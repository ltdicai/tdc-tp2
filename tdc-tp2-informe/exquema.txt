
-Uso de Traceroute para la detección automática de enlaces de larga distancia utilizando Cimbala-

Introduccion
	Internet es posible gracias a un conjunto de miles de redes interconectadas entre sí.
	La conexion entre redes de distintos contitentes se realiza por medio de cables submarinos capaces de transportar grandes volumnes de datos por segundo.
	En este trabajo analizaremos que tan factible resulta utilizar la salida provista por una herramienta de traceroute entre hots para detectar saltos intercontinentales.  



Marco teórico
	El Round Trip Time (RTT) es el tiempo que tarda un paquete en ir y volver desde un nodo A (el origen) a un nodo B (el destino) dentro de una red. 
	Cuando se trata de enlaces punto a punto, se define como 2 * Delay. 
	Si bien a nivel de enlace el Delay puede calcularse a partir de variables conocidas (ancho de banda, velocidad de propagación del medio, etc), a nivel de red  de un paquete IP queda sujeto a la ruta que toma un paquete, que puede 
		RTT entre varias redes interconectadas depende de variables desconocidadas de cada enlace intermedio
		
		
	Protocolo ICMP
		

	Traceroute
		ICMP
		Protocolo especial

	 
Herramientas desarrolladas

	Traceroute: idea
		Implementamos nuestra propia herramienta de traceroute siguiendo la técnica del envío de paquetes ICMP "echo request"/"echo replay". Consideramos dos posibles implementaciones: el algoritmo estandard, que consiste en enviar para cada TTL una ráfaga de paquetes; y una modificación en la que se envíe un paquete por TTL hasta alcanzar el host destino o superar el límite de saltos y repetir desde el principio. Elegimos la primera por simplicida de la implementación al momento de calcular el valor del RTT.

		Un punto a considerar cuando se realiza traceroute con ICMP es que cada paquete puede seguir una ruta distinta a la recorrida por los demás (y las rutas  pueden variar incluso entre la ida y la vuelta de un mismo paquete). Por lo tanto, para un TLL dado podríamos obtener respuestas de varios hosts distintos. Para lidiar con este problema, decidimos considerar solo la ruta más problable. Para esto, por cada rafaga de paquetes "echo request" consideramos como nodo del camino aquel que haya respondido la mayor cantidad de veces (al calcular la frecuencia descartamos los timetouts que hayan sucedido).

		Existe otro detalle a resolver una vez que quedan determinados los host del camino: para cada host tenemos una muestra de RTTs que pueden  pueden variar considerablemente. Teniendo en cuenta el objetivo de nuestra herramienta es estimar un camino con los valores esperados de RTT entre nodos, sopesamos varias alternativas para aplanar los datos. Entre ellas analizamos las siguientes:
			Menor RTT
			RTT Promedio
			RTT Promedio, quitando previamente los outliers de la muestra (con el método de Cimbala)
			Mediana de RTT

		La herramienta calcula todas ella a modo de comparación, pero para los análisis nos decantamos por utilizar el RTT promedio pre-filtrado, pues esperamos que resulte en valores significativos que no se vean afectados por datos espurios. 


	Detección automática de enlaces de enlaces intercontinentales 
		
		Una vez determinado un camino y los RTT correspondientes, estamos en condiciones de comenzar el análisis para intentar detectar automáticamente los enlaces intercontinentales de larga distancia basandonos en la técnica de estimación de outliers propuesta por Cimbala. Para ello, obtenemos los RTT relativos entre hops consecutivos y aplicamos el algoritmo de Cimbala a fin de detectar outliers. Aquellos saltos que presenten outliers son los que consideraremos como posibles saltos intercontitentales. 

Resulta importante  considerar la posibilidad de que algunos hops no tengan definido su RTT. Esto puede suceder cuando, por ejemplo, el hop no implementaba ICMP o se encontraba detrás de un firewall que bloqueaba este protocolo. Contemplamos la opción de interpolar estos faltantes, pero concluimos que la falta de más información nos posibilita solo a aplicar un interpolado lineal que resultaría en información "suavizada" que juegue negativamente al momento de aplicar Cimbala. Por esto, decidimos utilizar solamente los hops con RTT definido: si detectamos un posible salto intercontinental y vemos que los hops no son consecutivos, al menos podemos deducir que el salto ocurre entre esos host. 


	Implementacion

La herramienta desarrollada permite definir los siguientes parametros de ejecución:
	MAT_RAFAGA: tamaño de la rafaga para cada TTL
	MAX_TTL: cantidad maxima de saltos esperados
	TIMEOUT: tiempo de espera, medido en segundos 
	P: Tolerancia a timeouts: cantidad de timeouts seguidos que se toleran antes de decidir que no hay respuesta, medido en porcentaje del tamaño de la rafaga.

El codigo se divide en tres funciones principales
	rastrear: es la implementacion del algoritmo de traceroute. Devuelve un muestreo de RTTs por TTL.

	generar_camino: a partir del muestreo devuelto por 'rastrear', decide cual es el camino más probable y calcula los RTT correspondientes a cada hop.

	detectar_enlaces_intercontinentales: dato un camino devuelto por 'generar_camino', calcula los RTT entre hops y marca aquellos que pueden ser saltos intercontinentales mediante la deteccion de outlier según el algoritmo de Cimbala.
	


	

Experimentos
	Mapa de las universidades

	Comandos:
		EEUU: sudo python traceroute_4.py www.cs.uoregon.edu -tr 500 -o EEUU_OREGON_20160710_1000_500
		JAPON: sudo python traceroute_4.py www.u-tokyo.ac.jp -tr 500 -o JAP_20160710_1000_500
		RUSIA: sudo python traceroute_4.py msu.ru -tr 500 -o RUSIA_20160710_1000_500
		SUDAFRICA: sudo python traceroute_4.py www.unisa.ac.za -tr 500 -o AFR_20160710_1000_50

	Para cada experimento:
		Mapa con los puntos marcados
		Grafico de RTT (lineas)
		Grafico de RTT relativos (barras)
		Tabla de saltos (agregar ips)

Analisis de resultados
	Podemos 

Conclusión
	Tomar la mediana? 
	Existen muchos factores que influyen en los tiempos de respuesta (el tipo de conexion a internet, la velocidad de internet, el ruteo de cada paquete, la congestion, los routers MPLS)
	Incluso usando una implementación de traceroute que mantenaga un único camino, problemas como congestión pueden el resultado (si solo se miran los tiempos)
	Mirar tiempo + IP del hop da una mejor idea (por ejemplo, se puede desetimar asaltos dentro de una misma red)

	Queda probar considerar los saltos entre subredes, en lugar de entre hops.


