
-Uso de Traceroute para la detección de enlaces de larga distancia-

Introduccion
	Internet es posible gracias a un conjunto de miles de redes interconectadas entre sí.
	La conexion entre redes de distintos contitentes se realiza por medio de cables submarinos capaces de transportar grandes volumnes de datos por segundo.
	En este trabajo analizaremos que tan factible resulta utilizar la salida provista por una herramienta de traceroute entre hots para detectar saltos intercontinentales.  



Marco teórico
	El Round Trip Time (RTT) es el tiempo que tarda un paquete en ir y volver desde un nodo A (el origen) a un nodo B (el destino) dentro de una red. 
	Cuando se trata de enlaces punto a punto, se define como 2 * Delay. 
	Si bien a nivel de enlace el Delay puede calcularse a partir de variables conocidas (ancho de banda, velocidad de propagación del medio, etc), a nivel de red  de un paquete IP queda sujeto a la ruta que toma un paquete, que puede 
		RTT entre varias redes interconectadas depende de variables desconocidadas de cada enlace intermedio
		
		
	Protocolo ICMP
		

	Traceroute
		ICMP
		Protocolo especial

	 
Herramientas desarrolladas

	Traceroute
		Implementamos nuestra propia herramienta de traceroute siguiendo la técnica del envío de paquetes ICMP "echo request"/"echo replay". Consideramos dos posibles implementaciones: el algoritmo estandard, que consiste en enviar para cada TTL una ráfaga de paquetes; y una modificación en la que se envíe un paquete por TTL hasta alcanzar el host destino o superar el límite de saltos y repetir desde el principio. Elegimos la primera por simplicida de la implementación al momento de calcular el valor del RTT para cada salto.


		Un punto a considerar cuando se realiza traceroute por ICMP es que cada paquete puede seguir una ruta distinta a la recorrida por los demás (y las rutas  pueden variar incluso entre la ida y la vuelta de un mismo paquete). Por lo tanto, para un TLL dado podríamos obtener respuestas de varios hosts distintos. Para lidiar con este problema, decidimos considerar solo la ruta más problable. Para esto, por cada rafaga de paquetes "echo request" consideramos como nodo del camino aquel que haya respondido la mayor cantidad de veces (al calcular la frecuencia descartamos los timetouts que hayan sucedido).

		Otro detalle importante es que los RTT medidos para un host pueden variar considerablemente por la misma independencia entre paquetes antes mencionada. Teniendo en cuenta el objetivo de nuestra herramienta, resulta necesario determinar el valor del RTT para cada hop a partir de una muestra de n mediciones. Existen varias alternativas y la elección de una u otra depende de que busquemos medir y que propiedades consideremos más relevantes. En principio, podríamos utilizar cualquiera de las siguientes:
			Menor RTT
			RTT Promedio
			RTT Promedio, quitando previamente los outliers de la muestra (con el método de Cimbala)
			Mediana de RTT

		Nos decantamos por utilizar el RTT promedio pre-filtrado, pues esperamos que suavice los valores medidos pero sin verse demasiado afectado por los valores de los extremos. Más alla de esto, mostramos calculamos las otras opciones a modo de comparación.

La herramienta permite definir la cantidad maxima de saltos esperados, el tiempo de timeout para el envío de un paquete, y la cantidad de timeouts seguidos (dado en porcentaje del tamaño de la rafaga) que se toleran antes de decidir que para un TTL no hay respuseta. 	

	
	Modificacion de la herramienta para distinguir posibles enlaces automaticamente, utilizando el metodo de Cimbala
		Una vez definido el camino y los tiempos correspondientes a cada hop, consideramos las diferencias de RTT entre hops sucesivos.
		Hay dos opciones para tratar los casos en los que haya un hueco de respuesta entre dos hops:
			Completar el camino, interpolando de alguna manera el tiempo entre los hops con respuesta
			Descartar los hops sin respuesta en el calculo de las diferencias  
		
		Decidimos seguir la segunda opción, porque ...

	

Experimentos
	Mapa de las universidades

	Comandos:
		EEUU: sudo python traceroute_4.py www.cs.uoregon.edu -tr 500 -o EEUU_OREGON_20160710_1000_500
		JAPON: sudo python traceroute_4.py www.u-tokyo.ac.jp -tr 500 -o JAP_20160710_1000_500
		RUSIA: sudo python traceroute_4.py msu.ru -tr 500 -o RUSIA_20160710_1000_500
		SUDAFRICA: sudo python traceroute_4.py www.unisa.ac.za -tr 500 -o AFR_20160710_1000_50

	Para cada experimento:
		Mapa con los puntos marcados
		Grafico de RTT (lineas)
		Grafico de RTT relativos (barras)
		Tabla de saltos (agregar ips)

Analisis de resultados
	Podemos 

Conclusión
	Tomar la mediana? 
	Existen muchos factores que influyen en los tiempos de respuesta (el tipo de conexion a internet, la velocidad de internet, el ruteo de cada paquete, la congestion, los routers MPLS)
	Incluso usando una implementación de traceroute que mantenaga un único camino, problemas como congestión pueden el resultado (si solo se miran los tiempos)
	Mirar tiempo + IP del hop da una mejor idea (por ejemplo, se puede desetimar asaltos dentro de una misma red)

	Queda probar considerar los saltos entre subredes, en lugar de entre hops.


